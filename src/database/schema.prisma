datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../@generated"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

enum Permission {
  ADMIN
  USER
  GUEST
}

model User {
  id          String       @id @default(cuid())
  name        String
  username    String
  password    String
  permissions Permission[] @default([GUEST])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  isDeactivated Boolean @default(false)
  isDeleted     Boolean @default(false)

  shipCreatedBy Ship[] @relation("shipCreatedBy")
  shipUpdatedBy Ship[] @relation("shipUpdatedBy")
  shipDeletedBy Ship[] @relation("shipDeletedBy")
}

model Ship {
  id   String @id @default(cuid())
  name String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  createdById String?
  updatedById String?
  deletedById String?

  isDeleted Boolean @default(false)

  createdBy User? @relation("shipCreatedBy", fields: [createdById], references: [id])
  updatedBy User? @relation("shipUpdatedBy", fields: [updatedById], references: [id])
  deletedBy User? @relation("shipDeletedBy", fields: [deletedById], references: [id])
}
